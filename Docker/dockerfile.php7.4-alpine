# Use the official PHP Alpine image as the base image
FROM php:7.4-alpine

# Set the working directory inside the container
WORKDIR /var/www/html

# Install system dependencies
RUN apk update && apk add --no-cache \
    curl \
    libpng-dev \
    libjpeg-turbo-dev \
    libwebp-dev \
    libxpm-dev \
    libzip-dev \
    zip \
    unzip

# Install PHP extensions
RUN docker-php-ext-install pdo_mysql gd zip

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy the Laravel project files to the working directory
USER www-data
COPY --chown=www-data:www-data . .
RUN composer install

# Set environment variables
ENV APP_NAME="vpnalc"
ENV APP_ENV=production
ENV APP_KEY=base64:/N6X10CMXUZV2VBh/49Zt7h2xbKff9D7+NQlHyB2GOw=
ENV APP_DEBUG=true
ENV APP_URL=http://localhost

RUN php artisan config:clear
RUN php artisan cache:clear
RUN php artisan route:clear
RUN php artisan view:clear

# set permission storage
RUN chmod -R 777 storage && chmod -R 777 bootstrap/cache

# Expose port 80 for HTTP
EXPOSE 80

# Run the Laravel application
CMD php artisan serve --host=0.0.0.0 --port=80

# ref: https://codepal.ai/dockerfile-writer.py/query/I9QBLl80/dockerfile-laravel-7-project-php-alpine